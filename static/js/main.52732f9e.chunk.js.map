{"version":3,"sources":["components/AddTask.js","components/TaskItem.js","components/TaskList.js","components/FilterButton.js","firebase-config.js","store/task-context.js","App.js","index.js"],"names":["AddTask","props","useState","enteredTask","setEnteredTask","onSubmit","event","preventDefault","trim","createTask","className","type","placeholder","autoComplete","value","onChange","target","TaskItem","completed","checked","updateTask","id","task","onClick","deleteTask","TaskList","taskList","map","item","FilterButton","aria-pressed","isPressed","setFilter","name","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","TaskContext","createContext","TaskProvider","tasksList","setTasksList","taskCollectionRef","collection","getTasks","a","getDocs","data","docs","doc","addDoc","createdAt","serverTimestamp","taskDoc","newFields","updateDoc","deleteDoc","Provider","children","FILTER_MAP","All","Active","Completed","FILTER_NAMES","Object","keys","App","useContext","filter","filteredList","sort","b","filterList","useEffect","console","log","Date","toDateString","length","rel","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52732f9e.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst AddTask = (props) => {\n  const [enteredTask, setEnteredTask] = useState('');\n\n  const addTaskHandler = (event) => {\n    event.preventDefault();\n    if (!enteredTask.trim()) {\n      return;\n    }\n\n    props.createTask(enteredTask);\n    setEnteredTask('');\n  };\n\n  const taskChangeHandler = (event) => {\n    setEnteredTask(event.target.value);\n  };\n\n  return (\n    <form onSubmit={addTaskHandler}>\n      <input\n        className=\"add-task\"\n        type=\"text\"\n        placeholder=\"Add a New Task...\"\n        autoComplete=\"off\"\n        value={enteredTask}\n        onChange={taskChangeHandler}\n      />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import React, { useState } from 'react';\n\nconst TaskItem = (props) => {\n  const [isDone, setIsDone] = useState(props.completed);\n\n  // const markDone = (props) => {\n  //   setIsDone((v) => !v);\n  // };\n\n  return (\n    <div className=\"task-item\">\n      <input\n        className=\"check-box\"\n        type=\"checkbox\"\n        checked={props.completed}\n        onChange={() => {\n          props.updateTask(props.id, props.completed);\n        }}\n      />\n      <p className={props.completed ? 'task-name-checked' : 'task-name'}>\n        {props.task}\n      </p>\n      <button\n        className=\"task-delete\"\n        onClick={() => {\n          props.deleteTask(props.id);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default TaskItem;\n","import TaskItem from './TaskItem';\n\nconst TaskList = (props) => {\n  return (\n    <div className=\"task-list-container\">\n      {props.taskList.map((item) => (\n        <TaskItem\n          id={item.id}\n          key={item.id}\n          task={item.task}\n          completed={item.completed}\n          deleteTask={props.deleteTask}\n          updateTask={props.updateTask}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React from 'react';\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"filter\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      {props.name}\n    </button>\n  );\n}\n\nexport default FilterButton;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from '@firebase/firestore';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: 'task-app-hakan.firebaseapp.com',\n  projectId: 'task-app-hakan',\n  storageBucket: 'task-app-hakan.appspot.com',\n  messagingSenderId: '832557801105',\n  appId: '1:832557801105:web:f2c9685b5fdf2b7a5c6930',\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n","import { createContext, useState, useContext, useEffect } from 'react';\nimport { db } from '../firebase-config';\nimport {\n  collection,\n  doc,\n  getDocs,\n  addDoc,\n  deleteDoc,\n  updateDoc,\n  serverTimestamp,\n} from '@firebase/firestore';\n\nconst TaskContext = createContext();\n\nexport const TaskProvider = (props) => {\n  const [tasksList, setTasksList] = useState([]);\n\n  const taskCollectionRef = collection(db, 'tasks');\n\n  const getTasks = async () => {\n    const data = await getDocs(taskCollectionRef);\n    setTasksList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n  };\n\n  const createTask = async (task) => {\n    if (task !== '') {\n      await addDoc(taskCollectionRef, {\n        task: task,\n        completed: false,\n        createdAt: serverTimestamp(),\n      });\n    }\n    getTasks();\n  };\n\n  const updateTask = async (id, completed) => {\n    const taskDoc = doc(db, 'tasks', id);\n    const newFields = { completed: !completed };\n    await updateDoc(taskDoc, newFields);\n    getTasks();\n  };\n\n  const deleteTask = async (id) => {\n    const taskDoc = doc(db, 'tasks', id);\n    await deleteDoc(taskDoc);\n    getTasks();\n  };\n\n  return (\n    <TaskContext.Provider\n      value={{\n        getTasks,\n        tasksList,\n        createTask,\n        updateTask,\n        deleteTask,\n      }}\n    >\n      {props.children}\n    </TaskContext.Provider>\n  );\n};\n\nexport const useTask = () => useContext(TaskContext);\n","import React, { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport TaskList from './components/TaskList';\nimport FilterButton from './components/FilterButton';\nimport { useTask } from './store/task-context';\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App() {\n  const { getTasks, tasksList, createTask, updateTask, deleteTask } = useTask();\n\n  const [filter, setFilter] = useState('All');\n\n  const filteredList = tasksList\n    .filter(FILTER_MAP[filter])\n    .sort((a, b) => (a.createdAt < b.createdAt ? 1 : -1));\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  useEffect(() => {\n    getTasks();\n  }, []);\n\n  console.log(tasksList);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"card\">\n          <header className=\"header\">\n            <h1 className=\"title\">Task Manager</h1>\n            <p className=\"text-gray\">{new Date().toDateString()}</p>\n          </header>\n          <div className=\"tool-bar\">\n            <p>{filteredList.length} tasks</p>\n            <div className=\"filters\">{filterList}</div>\n          </div>\n          <AddTask createTask={createTask} />\n          {filteredList.length > 0 ? (\n            <TaskList\n              taskList={filteredList}\n              deleteTask={deleteTask}\n              updateTask={updateTask}\n            />\n          ) : (\n            <p className=\"no-task\">Nothing Here</p>\n          )}\n        </div>\n      </div>\n      <section className=\"footer\">\n        by{' '}\n        <a\n          className=\"footer\"\n          rel=\"github\"\n          href=\"https://github.com/hakangundogdu\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Hakan Gundogdu\n        </a>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { TaskProvider } from './store/task-context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TaskProvider>\n      <App />\n    </TaskProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}