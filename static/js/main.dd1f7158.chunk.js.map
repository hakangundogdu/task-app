{"version":3,"sources":["components/AddTask.js","components/TaskItem.js","components/TaskList.js","components/FilterButton.js","App.js","index.js"],"names":["AddTask","props","useState","enteredTask","setEnteredTask","onSubmit","event","preventDefault","trim","onAddTask","className","type","placeholder","autoComplete","value","onChange","target","TaskItem","completed","isDone","setIsDone","checked","v","task","onClick","onDeleteTask","id","TaskList","taskList","map","item","FilterButton","aria-pressed","isPressed","setFilter","name","FILTER_MAP","All","Active","Completed","FILTER_NAMES","Object","keys","App","setTaskList","filter","filteredList","filterList","Date","toDateString","length","prevTaskList","Math","random","toString","rel","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd1f7158.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst AddTask = (props) => {\n  const [enteredTask, setEnteredTask] = useState('');\n\n  const addTaskHandler = (event) => {\n    event.preventDefault();\n    if (!enteredTask.trim()) {\n      return;\n    }\n    props.onAddTask(enteredTask);\n    setEnteredTask('');\n  };\n\n  const taskChangeHandler = (event) => {\n    setEnteredTask(event.target.value);\n  };\n\n  return (\n    <form onSubmit={addTaskHandler}>\n      <input\n        className=\"add-task\"\n        type=\"text\"\n        placeholder=\"Add a New Task...\"\n        autoComplete=\"off\"\n        value={enteredTask}\n        onChange={taskChangeHandler}\n      />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import React, { useState } from 'react';\n\nconst TaskItem = (props) => {\n  const [isDone, setIsDone] = useState(props.completed);\n\n  const markDone = (props) => {\n    setIsDone((v) => !v);\n  };\n\n  return (\n    <div className=\"task-item\">\n      <input\n        className=\"check-box\"\n        type=\"checkbox\"\n        checked={isDone}\n        onChange={markDone}\n      />\n      <p className={isDone ? 'task-name-checked' : 'task-name'}>{props.task}</p>\n      <button\n        className=\"task-delete\"\n        onClick={() => {\n          props.onDeleteTask(props.id);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default TaskItem;\n","import TaskItem from './TaskItem';\n\nconst TaskList = (props) => {\n  return (\n    <div className=\"task-list-container\">\n      {props.taskList.map((item) => (\n        <TaskItem\n          id={item.id}\n          key={item.id}\n          task={item.task}\n          completed={item.completed}\n          onDeleteTask={props.onDeleteTask}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React from 'react';\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"filter\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      {props.name}\n    </button>\n  );\n}\n\nexport default FilterButton;\n","import React, { useState } from 'react';\nimport AddTask from './components/AddTask';\nimport TaskList from './components/TaskList';\nimport FilterButton from './components/FilterButton';\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App() {\n  const DEMOTASKS = [\n    {\n      id: 1,\n      task: 'React Native Course',\n      completed: true,\n    },\n\n    {\n      id: 2,\n      task: 'React Project',\n      completed: false,\n    },\n\n    {\n      id: 3,\n      task: 'Read the book',\n      completed: false,\n    },\n  ];\n\n  const [taskList, setTaskList] = useState(DEMOTASKS);\n  const [filter, setFilter] = useState('All');\n\n  const addTaskHandler = (task) => {\n    if (task !== '') {\n      setTaskList((prevTaskList) => {\n        return [\n          { task: task, completed: false, id: Math.random().toString() },\n          ...prevTaskList,\n        ];\n      });\n    }\n  };\n\n  const deleteTaskHandler = (id) => {\n    setTaskList(taskList.filter((task) => task.id !== id));\n  };\n\n  const filteredList = taskList.filter(FILTER_MAP[filter]);\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"card\">\n          <header className=\"header\">\n            {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n            <h1 className=\"title\">Task Manager</h1>\n            <p className=\"text-gray\">{new Date().toDateString()}</p>\n          </header>\n          <div className=\"tool-bar\">\n            <p>{filteredList.length} tasks</p>\n            <div className=\"filters\">{filterList}</div>\n          </div>\n          <AddTask onAddTask={addTaskHandler} />\n          <TaskList taskList={filteredList} onDeleteTask={deleteTaskHandler} />\n        </div>\n      </div>\n      <section className=\"footer\">\n        by{' '}\n        <a\n          className=\"footer\"\n          rel=\"github\"\n          href=\"https://github.com/hakangundogdu\"\n          target=\"_blank\"\n        >\n          Hakan Gundogdu\n        </a>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}